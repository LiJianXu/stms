package com.jtdd.entity;
// Generated 2017-11-4 17:55:03 by Hibernate Tools 4.0.1.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.codehaus.jackson.annotate.JsonManagedReference;

/**
 * RoleAuthRelation generated by hbm2java
 */
@Entity
@Table(name = "role_auth_relation", catalog = "stms")
public class RoleAuthRelation implements java.io.Serializable {

	private Integer relationId;
	@JsonManagedReference
	private Role role;
	@JsonManagedReference
	private Authority authority;

	public RoleAuthRelation() {
	}

	public RoleAuthRelation(Role role, Authority authority) {
		this.role = role;
		this.authority = authority;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "relation_id", unique = true, nullable = false)
	public Integer getRelationId() {
		return this.relationId;
	}

	public void setRelationId(Integer relationId) {
		this.relationId = relationId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "role_id", nullable = false)
	public Role getRole() {
		return this.role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "auth_id", nullable = false)
	public Authority getAuthority() {
		return this.authority;
	}

	public void setAuthority(Authority authority) {
		this.authority = authority;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((authority == null) ? 0 : authority.hashCode());
		result = prime * result + ((relationId == null) ? 0 : relationId.hashCode());
		result = prime * result + ((role == null) ? 0 : role.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj){
			return true;
		}
			
		if (obj == null){
			return false;
		}
			
		if (getClass() != obj.getClass()){
			return false;
		}
			
		RoleAuthRelation other = (RoleAuthRelation) obj;
		if (authority == null) {
			if (other.authority != null){
				return false;
			}
				
		} else if (!authority.equals(other.authority)){
			return false;
		}
			
		if (relationId == null) {
			if (other.relationId != null){
				return false;
			}
				
		} else if (!relationId.equals(other.relationId)){
			return false;
		}
			
		if (role == null) {
			if (other.role != null){
				return false;
			}
				
		} else if (!role.equals(other.role)){
			return false;
		}
			
		return true;
	}

}
