package com.jtdd.entity;
// Generated 2017-11-4 17:55:03 by Hibernate Tools 4.0.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;



import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * StudentClass generated by hbm2java
 */
@Entity
@Table(name = "student_class", catalog = "stms")
public class StudentClass implements java.io.Serializable {

	private Integer id;
	@JsonBackReference
	private Major major;
	private String name;
	private String specialty;
	private int allStudents;
	@JsonBackReference
	private Set<TeacherClass> teacherClasses = new HashSet<TeacherClass>(0);

	public StudentClass() {
	}

	public StudentClass(Integer id, String name) {
		this.id = id;
		this.name = name;
	}

	public StudentClass(Major major, String name, String specialty, int allStudents) {
		this.major = major;
		this.name = name;
		this.specialty = specialty;
		this.allStudents = allStudents;
	}

	public StudentClass(Major major, String name, String specialty, int allStudents, Set<TeacherClass> teacherClasses) {
		this.major = major;
		this.name = name;
		this.specialty = specialty;
		this.allStudents = allStudents;
		this.teacherClasses = teacherClasses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "major_id", nullable = false)
	public Major getMajor() {
		return this.major;
	}

	public void setMajor(Major major) {
		this.major = major;
	}

	@Column(name = "name", nullable = false, length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "specialty", nullable = false, length = 50)
	public String getSpecialty() {
		return this.specialty;
	}

	public void setSpecialty(String specialty) {
		this.specialty = specialty;
	}

	@Column(name = "all_students", nullable = false)
	public int getAllStudents() {
		return this.allStudents;
	}

	public void setAllStudents(int allStudents) {
		this.allStudents = allStudents;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "studentClass")
	public Set<TeacherClass> getTeacherClasses() {
		return this.teacherClasses;
	}

	public void setTeacherClasses(Set<TeacherClass> teacherClasses) {
		this.teacherClasses = teacherClasses;
	}

	@Override
	public String toString() {
		return "StudentClass [id=" + id + ", name=" + name + ", specialty=" + specialty + ", allStudents=" + allStudents
				+ "]";
	}
	
	
}
